name: Zero Downtime Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: app
  DOCKER_TAG: ${{ github.sha }}
  SERVICE_NAME: app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: network=host

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /app
            docker compose -f /app/docker-compose.yml pull || true
            docker compose -f /app/docker-compose.yml up -d --no-deps --scale ${{ env.SERVICE_NAME }}=2
            sleep 15
            docker compose -f /app/docker-compose.yml exec ${{ env.SERVICE_NAME }} bun run migrate
            docker compose -f /app/docker-compose.yml stop ${{ env.SERVICE_NAME }}-old 
            docker compose -f /app/docker-compose.yml rm -f ${{ env.SERVICE_NAME }}-old

      - name: Rollback on failure
        if: failure()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker compose -f /app/docker-compose.yml stop ${{ env.SERVICE_NAME }}-new
            docker compose -f /app/docker-compose.yml rm -f ${{ env.SERVICE_NAME }}-new
            docker compose -f /app/docker-compose.yml up -d --no-deps

      - name: Notify deployment status
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: github.context.job.status === 'success' ? 'success' : 'error',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: github.context.job.status === 'success' ? 'Deployment succeeded' : 'Deployment failed',
              context: "production"
            })
